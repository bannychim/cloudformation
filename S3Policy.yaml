Parameters:
  DefaultUser:
    Description: DefaultUserName
    Type: String
  CustomerName:
    Description: Input customer GroupName
    Type: String
  ProjectCode:
    Description: Input project code
    Type: String

Resources:
  USER1:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Ref DefaultUser
      Groups: 
        - !Ref CUSTGROUP
      LoginProfile:
        Password: pa$$w0rd
        PasswordResetRequired: true
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMUserChangePassword

  TESTUSER:
    Type: 'AWS::IAM::User'
    Properties:
      UserName: !Sub "${CustomerName}Test"
      Groups: 
        - !Ref CUSTGROUP
      LoginProfile:
        Password: pa$$w0rd
        PasswordResetRequired: true
      ManagedPolicyArns:
        - arn:aws:iam::aws:policy/IAMUserChangePassword

  CUSTGROUP:
    Type: 'AWS::IAM::Group'
    Properties:
      GroupName: !Sub "${CustomerName}Group"
    Metadata:
      'AWS::CloudFormation::Designer':
        id: 276ebd3a-a4e4-40e8-b144-2ca710d7018c
  INPOLICU1:
    Type: 'AWS::IAM::Policy'
    Properties:
      PolicyName: limit-access-to-bucket
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Action: 's3:ListAllMyBuckets'
            Resource: '*'
          - Effect: Allow
            Action:
              - 's3:ListBucket'
              - 's3:GetBucketLocation'
            Resource: !GetAtt S3BPPP3.Arn
          - Effect: Allow
            Action:
              - 's3:PutObject'
              - 's3:PutObjectAcl'
              - 's3:GetObject'
              - 's3:GetObjectAcl'
              - 's3:DeleteObject'
            Resource: !Sub "${S3BPPP3.Arn}/*"
      Groups:
        - !Ref CUSTGROUP
  S3BPPP3:
    Type: 'AWS::S3::Bucket'
    Properties:
      BucketName: !Sub "aws-s3-bucket-${ProjectCode}"