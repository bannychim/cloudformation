AWSTemplateFormatVersion: 2010-09-09
Description: Create Pipeline 
Metadata:
  AWS::CloudFormation::Interface:
    ParameterGroups:
      - Label:
          default: "Pipeline Configuration"
        Parameters:
          - PipelineName
          - PipelineType
          - Version
          - CEVersion
      - Label:
          default: "Project Information"
        Parameters:
          - ProjectCode
          - S3Bucket
          - Prefix

Parameters:
  ProjectCode:
    Description: project-code
    Type: String
  CEVersion:
    Description: Compute Environment Version
    Type: String
  PipelineType:
    Description: Pipeline Type 
    Type: String
    Default: test
    AllowedValues:
      - test
      - prod
  Version:
    Description: Pipeline Version
    Type: String
  PipelineName:
    Description: Pipeline Name
    Type: String
  S3Bucket:
    Description: S3 Bucket Name for pipeline
    Type: String
  Prefix:
    Description: Prefix of S3 Bucket
    Type: String

Mappings:
  AWSVPCID:
    eu-west-2:
      Subnet: 
        - subnet-24526f4d
        - subnet-0d55d941
        - subnet-5fccb225
    us-west-1:
      Subnet:
        - subnet-4a05952c
        - subnet-d968c483
  AWSSG:
    eu-west-2:
      SecurityGroup: 
        - sg-ce3aaeb2
    us-west-1:
      SecurityGroup: 
        - sg-ce753a84
  DockerImage:
    us-west-1:
      DockerImageName: 276696791566.dkr.ecr.us-west-1.amazonaws.com/pointnet-test:latest
    eu-west-2:
      DockerImageName: 276696791566.dkr.ecr.eu-west-2.amazonaws.com/pointnet-test:latest

Resources: 
  ComputeEnvironment:
    Type: AWS::Batch::ComputeEnvironment
    Properties:
      Type: MANAGED
      ComputeEnvironmentName: !Sub "${PipelineType}-ce-pointnet-${ProjectCode}-NotSpot-${CEVersion}"
      ComputeResources:
        MaxvCpus: 96
        SecurityGroupIds:
          Fn::FindInMap:
          - AWSSG
          - Ref: AWS::Region
          - SecurityGroup
        Type: EC2
        Subnets:
          Fn::FindInMap:
          - AWSVPCID
          - Ref: AWS::Region
          - Subnet
        MinvCpus: 0
        InstanceRole: arn:aws:iam::276696791566:instance-profile/ecsInstanceRole
        InstanceTypes: 
          - g3.4xlarge
        LaunchTemplate:
          LaunchTemplateName: launch-template-pointnet
          Version: $Default
        Ec2Configuration:
          - ImageType: ECS_AL2_NVIDIA
        Tags: {"name": !Sub "${PipelineType}-ce-pointnet-${ProjectCode}-NotSpot-${CEVersion}", "projec-code": !Ref ProjectCode}
      State: ENABLED
  
  JobQueue:
    Type: AWS::Batch::JobQueue
    Properties:
      ComputeEnvironmentOrder:
        - Order: 1
          ComputeEnvironment: !Ref ComputeEnvironment
      State: ENABLED
      Priority: 1
      JobQueueName: !Sub "${PipelineType}-job-queue-${ProjectCode}"
  
  JobDefinition:
    Type: AWS::Batch::JobDefinition
    Properties:
      Type: container
      JobDefinitionName: !Sub "${PipelineType}-job-def-${ProjectCode}-pointnet-V${Version}"
      PlatformCapabilities:
        - EC2
      ContainerProperties:
        Command:
          - commit_id:latest
          - python
          - run.py
          - input=
          - Ref::S3key
          - bucket_name=
          - Ref::S3bucket
          - !Sub "pipeline=${PipelineName}"
        ResourceRequirements:
          - Type: VCPU
            Value: 4
          - Type: MEMORY
            Value: 40000
        Privileged: true
        JobRoleArn: arn:aws:iam::276696791566:role/test-role-for-ecs-container-pointnet
        Image: 
          Fn::FindInMap:
          - DockerImage
          - Ref: AWS::Region
          - DockerImageName
  
  S3BatchRule: 
    Type: AWS::Events::Rule
    Properties: 
      Description: "Rule-S3-to-batch-pointnet"
      Name: !Sub "${PipelineType}-s3-to-batch-pointnet-${ProjectCode}-V${Version}"
      EventPattern: 
        source: 
          - "aws.s3"
        detail-type: 
          - "AWS API Call via CloudTrail"
        detail: 
          eventSource:
            - "s3.amazonaws.com"
          eventName:
            - "CompleteMultipartUpload"
            - "PutObject"
            - "CopyObject"
          requestParameters:
            bucketName: 
              - !Ref S3Bucket
            key:
              - prefix: !Ref Prefix
      Targets:
        - Id: batch-job
          Arn: !Ref JobQueue
          RoleArn: arn:aws:iam::276696791566:role/service-role/AWS_Events_Invoke_Batch_Job_Queue
          BatchParameters:
            JobDefinition: !Ref JobDefinition
            JobName: !Sub "${PipelineType}-job-pointnet-${ProjectCode}-V${Version}"
          InputTransformer:
            InputPathsMap:
              "S3BucketValue" : "$.detail.requestParameters.bucketName"
              "S3KeyValue" : "$.detail.requestParameters.key"
            InputTemplate: '{"Parameters" : {"S3bucket":"\"<S3BucketValue>\"", "S3key":"\"<S3KeyValue>\""}}'
      State: "ENABLED"
